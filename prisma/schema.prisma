generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id           Int            @id @default(autoincrement())
  name         String?        @db.VarChar(100)
  description  String?        @db.VarChar(100)
  start_time   String         @default("0") @db.VarChar(100)
  end_time     String         @default("0") @db.VarChar(100)
  sex          String?        @db.VarChar(100)
  distance     Int?
  lap          Int?
  run          Boolean?       @default(false)
  event_id     Int?
  end_sch      String         @default("0") @db.VarChar(100)
  race_today   Boolean?       @default(false)
  start_sch    String         @default("0") @db.VarChar(100)
  events       events?        @relation(fields: [event_id], references: [id], onDelete: Restrict, map: "categories_ibfk_1")
  race_results race_results[]
  riders       riders[]

  @@index([event_id], map: "event_id")
}

model teams {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(100)
  province    String?  @db.VarChar(100)
  nationality String?  @db.VarChar(5)
  riders      riders[]
}

/// Satu event bisa memiliki banyak categor
model events {
  id               Int          @id @default(autoincrement())
  name             String?      @db.VarChar(100)
  location         String?      @db.VarChar(70)
  desc_1           String?      @db.VarChar(100)
  desc_2           String?      @db.VarChar(100)
  commisioner      String?      @db.VarChar(70)
  race_director    String?      @db.VarChar(70)
  distance         Int?
  type             String?      @db.VarChar(30)
  registration_fee Int?
  start_datetime   String       @default("0") @db.VarChar(100)
  end_datetime     String       @default("0") @db.VarChar(100)
  categories       categories[]
}

model race_results {
  result_id   Int        @id @default(autoincrement())
  rider_id    Int
  category_id Int
  lap_number  Int?       @default(0)
  finish_time String     @default("0") @db.VarChar(100)
  riders      riders     @relation(fields: [rider_id], references: [id], map: "race_results_ibfk_2")
  categories  categories @relation(fields: [category_id], references: [id], map: "race_results_ibfk_3")

  @@index([category_id], map: "category_id")
  @@index([rider_id], map: "rider_id")
}

model riders {
  id           Int            @id @default(autoincrement())
  name         String?        @db.VarChar(100)
  age          Int?
  nationality  String?        @db.VarChar(5)
  bib          String?        @db.VarChar(5)
  vci_num      String?        @db.VarChar(10)
  mac_no       String?        @db.VarChar(20)
  note         String?        @db.VarChar(20)
  note_1       String?        @db.VarChar(100)
  run          Boolean?       @default(false)
  category_id  Int
  team_id      Int
  total_waktu  String         @default("0") @db.VarChar(100)
  race_results race_results[]
  id_beacon    Int
  categories   categories     @relation(fields: [category_id], references: [id], map: "fk_category")
  teams        teams          @relation(fields: [team_id], references: [id], map: "fk_team")
  beacon       beacon         @relation(fields: [id_beacon], references: [id], map: "riders_ibfk_1")


  @@index([category_id], map: "fk_category")
  @@index([team_id], map: "fk_team")
  @@index([id_beacon], map: "id_beacon")
  
}

model beacon {
  id     Int      @id @default(autoincrement())
  tag_id String   @db.VarChar(20)
  riders riders[]
}

model utilities {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(100)
  value       String?  @db.VarChar(100)
}